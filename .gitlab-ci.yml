variables:
    CONAN_PUBLIC_REPO_URL: "https://api.bintray.com/conan/bincrafters/public-conan"
    CONAN_PUBLIC_REPO_NAME: "public-conan"
    CONAN_PRIVATE_REMOTE_NAME: "dutiona-lrde"                               # Conan remote name
    CONAN_PRIVATE_REMOTE_URL: "https://api.bintray.com/conan/dutiona/lrde"  # Conan remote name
    CONAN_USER: "dutiona"                                                   # Conan user name
    CONAN_API_KEY: "e2a665548385e82bf1ecbb4739d3582b83b8235f"

stages:
    - build
    - test
    - bench
    - deploy

image: carlinet/buildimage


########
# Test #
########

.job-build-linux-base: &distcheck-linux-base
    stage: test
    script:
        - mkdir build && cd build
        - conan remote add $CONAN_PUBLIC_REPO_NAME $CONAN_PUBLIC_REPO_URL
        - conan remote add $CONAN_PRIVATE_REMOTE_NAME $CONAN_PRIVATE_REMOTE_URL
        - conan user
              -p $CONAN_API_KEY
              -r $CONAN_PRIVATE_REMOTE_NAME $CONAN_USER
        - conan remote list
        - conan install .. --build missing -o benchmark=$BENCHMARK
        - cmake ..
        - cmake --build . --config $PYLENE_CONFIGURATION --target check


distcheck-linux-gcc-release:
    <<: *distcheck-linux-base
    variables:
        PYLENE_CONFIGURATION: "Release"
        CXX: "g++"
        CC: "gcc"
        BENCHMARK: "False"

distcheck-linux-clang-release:
    <<: *distcheck-linux-base
    variables:
        PYLENE_CONFIGURATION: "Release"
        CXX: "clang++"
        CC: "clang"
        BENCHMARK: "False"

distcheck-linux-gcc-debug:
    <<: *distcheck-linux-base
    variables:
        PYLENE_CONFIGURATION: "Debug"
        CXX: "g++"
        CC: "gcc"
        BENCHMARK: "False"

distcheck-linux-clang-debug:
    <<: *distcheck-linux-base
    variables:
        PYLENE_CONFIGURATION: "Debug"
        CXX: "clang++"
        CC: "clang"
        BENCHMARK: "False"

build-doc-images:
    stage: build
    script:
        - mkdir build && cd build
        - conan remote add $CONAN_PUBLIC_REPO_NAME $CONAN_PUBLIC_REPO_URL
        - conan remote add $CONAN_PRIVATE_REMOTE_NAME $CONAN_PRIVATE_REMOTE_URL
        - conan user
              -p $CONAN_API_KEY
              -r $CONAN_PRIVATE_REMOTE_NAME $CONAN_USER
        - conan remote list
        - conan install .. --build missing -o benchmark=False
        - cmake ..
        - cmake --build . --config Release --target build-images
    artifacts:
        paths:
            - doc/source/images


#########
# Bench #
#########

.job-bench-linux-base: &distbench-linux-base
    stage: bench
    script:
        - mkdir build && cd build
        - conan remote add $CONAN_PUBLIC_REPO_NAME $CONAN_PUBLIC_REPO_URL
        - conan remote add $CONAN_PRIVATE_REMOTE_NAME $CONAN_PRIVATE_REMOTE_URL
        - conan user
              -p $CONAN_API_KEY
              -r $CONAN_PRIVATE_REMOTE_NAME $CONAN_USER
        - conan remote list
        - conan install .. --build missing -o benchmark=$BENCHMARK
        - cmake ..
        - cmake --build . --config $PYLENE_CONFIGURATION --target benchmarks-compile
        - cmake --build . --config $PYLENE_CONFIGURATION --target benchmarks

distbench-linux-gcc-release:
    <<: *distbench-linux-base
    variables:
        PYLENE_CONFIGURATION: "Release"
        CXX: "g++"
        CC: "gcc"
        BENCHMARK: "True"

distbench-linux-clang-release:
    <<: *distbench-linux-base
    variables:
        PYLENE_CONFIGURATION: "Release"
        CXX: "clang++"
        CC: "clang"
        BENCHMARK: "True"


#################
# Documentation #
#################

.documentation-base:  &documentation-base
    stage: test
    script:
        - cd doc
        - doxygen
        - sphinx-build -b html source ../public
    artifacts:
        name: "documentation"
        paths:
            - public/

# Generate doc only
documentation:
    <<: *documentation-base
    except:
        - dev


##########
# Deploy #
##########
pages:
    <<: *documentation-base
    only:
        - dev
