stages:
    - build
    - test
    - bench
    - deploy

image: carlinet/buildimage

before_script:
    - mkdir build && cd build
    - conan install .. -pr buildfarm --build=missing


########
# Test #
########

.job-build-linux-base: &distcheck-linux-base
    stage: test
    script:
        - cmake .. -DCMAKE_BUILD_TYPE=$PYLENE_CONFIGURATION
        - cmake --build apps --config $PYLENE_CONFIGURATION
        - cmake --build tests --config $PYLENE_CONFIGURATION
        - ctest -L UnitTests
    dependencies: []
    artifacts:
        reports:
            junit: build/tests/UT*.xml
        expire_in: 15 days

distcheck-linux-gcc-release:
    <<: *distcheck-linux-base
    variables:
        PYLENE_CONFIGURATION: "Release"
        CXX: "g++"
        CC: "gcc"

distcheck-linux-clang-release:
    <<: *distcheck-linux-base
    variables:
        PYLENE_CONFIGURATION: "Release"
        CXX: "clang++"
        CC: "clang"

distcheck-linux-gcc-debug:
    <<: *distcheck-linux-base
    variables:
        PYLENE_CONFIGURATION: "Debug"
        CXX: "g++"
        CC: "gcc"

distcheck-linux-clang-debug:
    <<: *distcheck-linux-base
    variables:
        PYLENE_CONFIGURATION: "Debug"
        CXX: "clang++"
        CC: "clang"



#########
# Bench #
#########

.job-bench-linux-base: &distbench-linux-base
    stage: bench
    script:
        - cmake .. -DCMAKE_BUILD_TYPE=$PYLENE_CONFIGURATION
        - cmake --build . --target fetch-external-data
        - cmake --build bench --config $PYLENE_CONFIGURATION
        - ctest -L InternalTests
        - cmake --build .
                --config $PYLENE_CONFIGURATION
                --target run-all-benchmarks
        - ctest -L SpeedTests -V
    tags: [ "pylene-benchmarks" ]
    when: manual
    dependencies: []
    artifacts:
        name: "benchmark-results"
        paths:
            - build/bench/*.json
        reports:
            junit: build/bench/internal/UT*.xml
        expire_in: 15 days

distbench-linux-gcc-release:
    <<: *distbench-linux-base
    variables:
        PYLENE_CONFIGURATION: "Release"
        CXX: "g++"
        CC: "gcc"

distbench-linux-clang-release:
    <<: *distbench-linux-base
    variables:
        PYLENE_CONFIGURATION: "Release"
        CXX: "clang++"
        CC: "clang"

#################
# Documentation #
#################

.documentation-base:  &documentation-base
    stage: test
    script:
        - cmake .. -DCMAKE_BUILD_TYPE=Release
        - cmake --build .
                --config Release
                --target doc
        - mkdir ../public && mv doc/build/* ../public/
    artifacts:
        name: "documentation"
        expire_in: 2 days
        paths:
            - public/

# Generate doc only
documentation:
    <<: *documentation-base
    except:
        - dev


##########
# Deploy #
##########
pages:
    <<: *documentation-base
    only:
        - dev
