stages:
    - build
    - test
    - bench
    - deploy

image: carlinet/buildimage



build-doc-images:
    stage: build
    script:
        - mkdir build && cd build
        - conan install .. -pr buildfarm
        - cmake -DPYLENE_BUILD_BENCHMARKS=NO .. -DCMAKE_BUILD_TYPE=$PYLENE_CONFIGURATION
        - cmake --build .
                --config Release
                --target build-images
    artifacts:
        paths:
            - doc/source/images

########
# Test #
########

.job-build-linux-base: &distcheck-linux-base
    stage: test
    script:
        - mkdir build && cd build
        - conan install .. -pr buildfarm
        - cmake .. -DCMAKE_BUILD_TYPE=$PYLENE_CONFIGURATION
        - cmake --build .
                --config $PYLENE_CONFIGURATION
                --target check


distcheck-linux-gcc-release:
    <<: *distcheck-linux-base
    variables:
        PYLENE_CONFIGURATION: "Release"
        CXX: "g++"
        CC: "gcc"

distcheck-linux-clang-release:
    <<: *distcheck-linux-base
    variables:
        PYLENE_CONFIGURATION: "Release"
        CXX: "clang++"
        CC: "clang"

distcheck-linux-gcc-debug:
    <<: *distcheck-linux-base
    variables:
        PYLENE_CONFIGURATION: "Debug"
        CXX: "g++"
        CC: "gcc"

distcheck-linux-clang-debug:
    <<: *distcheck-linux-base
    variables:
        PYLENE_CONFIGURATION: "Debug"
        CXX: "clang++"
        CC: "clang"


#########
# Bench #
#########

.job-bench-linux-base: &distbench-linux-base
    stage: bench
    script:
        - mkdir build && cd build
        - conan install .. -pr buildfarm
        - cmake .. -DCMAKE_BUILD_TYPE=$PYLENE_CONFIGURATION
        - cmake --build .
                --config $PYLENE_CONFIGURATION
                --target benchmarks
        - cmake --build .
                --config $PYLENE_CONFIGURATION
                --target benchmarks-run
                -- -j1  # Force serial execution
   artifacts:
      name: "benchmark-results"
       paths:
            - build/bench/*.csv

distbench-linux-gcc-release:
    <<: *distbench-linux-base
    variables:
        PYLENE_CONFIGURATION: "Release"
        CXX: "g++"
        CC: "gcc"

distbench-linux-clang-release:
    <<: *distbench-linux-base
    variables:
        PYLENE_CONFIGURATION: "Release"
        CXX: "clang++"
        CC: "clang"


#################
# Documentation #
#################

.documentation-base:  &documentation-base
    stage: test
    script:
        - cd doc
        - doxygen
        - sphinx-build -b html source ../public
    artifacts:
        name: "documentation"
        paths:
            - public/

# Generate doc only
documentation:
    <<: *documentation-base
    except:
        - dev


##########
# Deploy #
##########
pages:
    <<: *documentation-base
    only:
        - dev
