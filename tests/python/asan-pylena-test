#!/bin/sh

# Based on asan-wrapper script from RWTH Aachen University and Matthew Arsenault, for our specific usage

lib=$(echo pylena_test*.so)
libasan=$(ldd $lib | grep asan | sed "s/^[[:space:]]//" | cut -d' ' -f1)
libasan_filename=$($CC --print-file-name=$libasan)

if [ -n "$libasan" ]
then
    if [ -n "$LD_PRELOAD" ]
    then
        export LD_PRELOAD="$libasan_filename:$LD_PRELOAD"
    else
        export LD_PRELOAD="$libasan_filename"
    fi
    export PYTHONMALLOC=malloc
fi

export ASAN_OPTIONS="log_path=log.tmp:halt_on_error=false"
$@
return_code=$?
log_path=$(echo log.tmp*)
if [ $return_code -ne 0 ]
then
    if [ "$log_path" != "log.tmp*" ]
    then
        rm $log_path
    fi
    exit 1
fi

unset ASAN_OPTIONS
if [ "$log_path" = "log.tmp*" ]
then
    exit 0
fi

output_lines="$(grep "pln|mln" $log_path)"
n_lines=$(echo -n $output_lines | wc -c)
if [ $n_lines = 0 ]
then
    rm $log_path
    exit 0
else
    echo $output_lines
    rm $log_path
    exit 1
fi
